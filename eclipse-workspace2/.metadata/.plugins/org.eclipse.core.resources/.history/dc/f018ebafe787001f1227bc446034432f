package Test_Scenarios;

import java.io.File;
import java.time.Duration;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.StaleElementReferenceException;
import org.openqa.selenium.TimeoutException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class languageChange {
    static WebDriverWait wait;

	public static void main(String[] args) throws InterruptedException {
		  ChromeDriver driver = new ChromeDriver();
	        driver.manage().window().maximize();
	        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
	
	        driver.get("https://testbusiness.practina.com/");
	        // Login process
	        WebElement emailInput1 = driver.findElement(By.xpath("//input[@formcontrolname='email']"));
	        emailInput1.sendKeys("kunal.kumar+dummybot1728019058797@bridgingtech.com");

	        WebElement passInput1 = driver.findElement(By.xpath("//input[@id='mat-input-0']"));
	        passInput1.sendKeys("K419unalkumar@");

	        WebElement loginButton1 = driver.findElement(By.xpath("//span[@id='primaryButton']"));
	        loginButton1.click();
	        
	        
	    	Thread.sleep(5000);
	    	
	    	
	        WebElement settings1 = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath("//div[@id='main']/ul/li[7]"))));
			settings1.click();
	    	
	    	WebElement languageTab = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath("//ul[@class='menu-list']/li[5]"))));
			languageTab.click();
			
				
			Thread.sleep(2000);
	    	
	    	List<WebElement> languagesList1 = driver.findElements(By.xpath("//div[@class='language-body']/div[1]/div/label/span"));
			System.out.println(languagesList1);

			// Check if the list has at least 5 elements
			if (languagesList1.size() >= 5) {
				  // Click on the fifth element (index 4)
			    WebElement fifthLanguage = languagesList1.get(4);
			    System.out.println("Fifth Language: " + fifthLanguage.getText());

			    if (fifthLanguage.isDisplayed() && fifthLanguage.isEnabled()) {
			        ((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", fifthLanguage);
			        ((JavascriptExecutor) driver).executeScript("arguments[0].click();", fifthLanguage);
			        System.out.println("Clicked on the fifth language: " + fifthLanguage.getText());
			    } else {
			        System.out.println("Fifth language is not clickable.");
			    }
			} else {
			    System.out.println("The list does not have enough elements.");
			}
			
			    // Click on the first element (index 0)
			    WebElement firstLanguage = languagesList1.get(0);
			    System.out.println("First Language: " + firstLanguage.getText());

			    if (firstLanguage.isDisplayed() && firstLanguage.isEnabled()) {
			        ((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", firstLanguage);
			        ((JavascriptExecutor) driver).executeScript("arguments[0].click();", firstLanguage);
			        System.out.println("Clicked on the first language: " + firstLanguage.getText());
			    } else {
			        System.out.println("First language is not clickable.");
			    }
	       
	        
	       
			    WebElement saveButton2 = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath("//button[@class='btn btn-primary m-0 submit-btn']"))));
			    saveButton2.click();
			    
			    
			    try {
		            // Attempt to find and interact with the dialogue container
		            WebElement dialogueContainer2 = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='position-relative py-4 px-md-4 px-3']")));
		            Thread.sleep(3000);

		            WebElement saveWithoutresetButton = dialogueContainer2.findElement(By.xpath("//div[contains(@class, 'submit-btns')]//button[2]"));
		            saveWithoutresetButton.click();

		        } 
		        // Catch TimeoutException instead of NoSuchElementException
		        catch (TimeoutException e) {
		            System.err.println("No dialogue found for Planner Reset");
		        }
			    
			    
			    WebElement aiPost2 = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@id='main']/ul/li[2]")));
		        aiPost2.click();

		        // Wait for the post element to be clickable
		      
		        WebElement element2 = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("(//div[@id='/posts']/div/ul/li/a[1])")));
		        element2.click();
		             
		       
		        Thread.sleep(10000);
		        
		     // Locate the element using WebDriverWait
		        WebElement createPost2 = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[contains(@class, 'create-post')]//button[contains(text(), 'Create Post')]")));

		        // Print the status of the element
		        System.out.println("Printing the status of element " + createPost2.isEnabled());

		        // Use JavaScript to scroll into view
		        JavascriptExecutor js1 = (JavascriptExecutor) driver;
		        js1.executeScript("arguments[0].scrollIntoView(true);", createPost2);

		        // Introduce a small sleep if necessary (not recommended but sometimes useful for dynamic content)
		        Thread.sleep(1000);

		        // Retry mechanism to handle StaleElementReferenceException
		        for (int i = 0; i < 3; i++) {
		            try {
		                // Locate the element again before clicking
		                createPost2 = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[contains(@class, 'create-post')]//button[contains(text(), 'Create Post')]")));
		                
		                // Click the button
		                createPost2.click();
		                
		                // Exit the loop if click is successful
		                break;
		            } catch (StaleElementReferenceException e) {
		                // Re-attempt to find the element if stale element exception occurs
		                System.out.println("Retrying due to stale element reference...");
		            }
		        }

		        
		        WebElement socialMediaPostDropdown = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='social-post-select']")));
		        socialMediaPostDropdown.click();
		        
		        WebElement shortsReelButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@role='listbox']/mat-option[5]")));
		        shortsReelButton.click();
		      
		        Thread.sleep(2000);
		        WebElement contentTextField = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[contains(@class, 'position-relative') and contains(@class, 'edit-caption') and contains(@class, 'bg-white') and contains(@class, 'no-caption')]//textarea")));
		        contentTextField.sendKeys("Tera Mera Safar\r\n"
		        		+ "Reha Hai Jo Gujar\r\n"
		        		+ "Maja Ta Aa Reha\r\n"
		        		+ "Utto Lagi Jawe Dar");
		        
		        WebElement uploadVideoFileButton = driver.findElement(By.xpath("//button[contains(@class, 'btn-no-transform') and contains(@class, 'add-img-btn') and contains(@class, 'btn-outline-bg') and contains(@class, 'w-100') and contains(@class, 'fs-16')]"));
		        uploadVideoFileButton.click();
		        
		        WebElement uploadButton4 = driver.findElement(By.id("imageFile"));
		        File file = new File("C:\\Users\\BHTPL_USR73\\Downloads\\safar.mp4");
		        uploadButton4.sendKeys(file.getAbsolutePath());
		        
		        WebElement publishShortButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[@class='btn-primary btn w-100 fs-16 fw-600 text-center']")));
		        publishShortButton.click();
		        
		        WebElement publishButton3 = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("(//div[@class='wrapper-end px-lg-4 pb-lg-0 pb-4']/button)[1]")));
		        publishButton3.click();
		        
		        Thread.sleep(10000);
		        
	            
		        WebElement aiPost3 = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@id='main']/ul/li[2]")));
		        aiPost3.click();

		        // Loop for dynamic loading and checking created date
		  
		     // Click the publish post button
		        WebElement publishPostButton = driver.findElement(By.xpath("(//div[@id='/posts']/div/ul/li/a[1])[2]"));
		        publishPostButton.click();

		        List<WebElement> datesPerPost = driver.findElements(By.xpath("//div[@class='blog-wrapper-innr']/div/div/span[2]")); 
		        System.out.println("Size of list after scrolling: " + datesPerPost.size());
		        int sizeOfList = datesPerPost.size();

		        // Get the current date
		        LocalDate currentDate = LocalDate.now();
		        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd MMM, yyyy");
		        String formattedDate = currentDate.format(formatter);
		        System.out.println("Formatted Date: " + formattedDate);

		        // Check if there are any posts in the list
		        if (sizeOfList > 0) {
		            // Get the date text from the last post
		            String dateText = datesPerPost.get(sizeOfList - 1).getText();  
		            try {
		                // Parse the date from the text
		                LocalDate postDate = LocalDate.parse(dateText, formatter);

		                // Compare the post date with the current date
		                if (postDate.isBefore(currentDate)) {
		                    // Click the three dots icon for the post
		                    WebElement threeDots = driver.findElement(By.xpath("//div[@class='blog-wrapper-innr']/div/app-facebook/div/div/span/mat-icon")); 
		                    threeDots.click();
		                    System.out.println("Clicked on post with date: " + dateText);
		                } else {
		                    System.out.println("Post date is not earlier than today.");
		                    // Scroll to the page listing
		                    WebElement pageListing = driver.findElement(By.xpath("//div[@class='blogs-wrapper hide-scroll-bar']"));
		                    ((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", pageListing);
		                    
		                    // Re-fetch the dates after scrolling
		                    datesPerPost = driver.findElements(By.xpath("//div[@class='blog-wrapper-innr']/div/div/span[2]")); 
		                    sizeOfList = datesPerPost.size(); // Update the size of the list

		                    // Check again if there are posts after scrolling
		                    if (sizeOfList > 0) {
		                        // Get the date text from the last post
		                        dateText = datesPerPost.get(sizeOfList - 1).getText();  
		                        LocalDate postDate2 = LocalDate.parse(dateText, formatter);
		                        
		                        // Compare the new post date with the current date
		                        if (postDate2.isBefore(currentDate)) {
		                            // Click the three dots icon for the post
		                            WebElement threeDots1 = driver.findElement(By.xpath("//div[@class='blog-wrapper-innr']/div/app-facebook/div/div/span/mat-icon")); 
		                            threeDots1.click();
		                            System.out.println("Clicked on post with date: " + dateText);
		                        } else {
		                            System.out.println("No post found which has repost button.");
		                        }
		                    } else {
		                        System.out.println("No posts found after scrolling.");
		                    }
		                }
		            } catch (DateTimeParseException e) {
		                System.out.println("Error parsing date: " + dateText);
		            }
		        } else {
		            System.out.println("There are less than 10 posts.");
		        }

		            



			    // Optionally, wait for any loading or actions before moving to the next element
			    // Thread.sleep(2000);  // You can introduce a wait here if necessary

			  


	            

	}

}
