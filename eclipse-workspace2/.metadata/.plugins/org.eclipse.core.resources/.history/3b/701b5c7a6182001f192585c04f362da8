package Test_Scenarios;

import java.time.Duration;
import java.util.Optional;
import java.util.concurrent.CountDownLatch;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.devtools.DevTools;
import org.openqa.selenium.devtools.v114.network.Network; 
import org.openqa.selenium.devtools.v114.network.model.Response; // Correctly import Response
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;

public class CreatePost {
    static WebDriverWait wait;
    private static final String WEBSOCKET_URL = "wss://admin.practina.com/v1/socket.io/?EIO=3&transport=websocket"; // Replace with actual WebSocket URL
    private static CountDownLatch latch = new CountDownLatch(1); // To wait for WebSocket message
    private static boolean isPostPublished = false; // To store publishing status

    public static void main(String[] args) throws InterruptedException {
    	
    	
    	
        // Initialize ChromeDriver
        ChromeDriver driver = new ChromeDriver();
        driver.manage().window().maximize();
        
        // Create WebDriverWait with explicit waits
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        
        // Create DevTools session for capturing API response
        DevTools devTools = driver.getDevTools();
        devTools.createSession();

        // Enable network tracking
        devTools.send(Network.enable(Optional.empty(), Optional.empty(), Optional.empty()));
        
        

        // Capture network responses
        devTools.addListener(Network.responseReceived(), response -> {
            Response res = response.getResponse();
            // Capture only the response of a specific API endpoint
            if (res.getUrl().contains("generateContentAi")) {
                System.out.println("API URL: " + res.getUrl());
                System.out.println("Status: " + res.getStatus());

                try {
                    // Get the response body
                    String responseBody = devTools.send(Network.getResponseBody(response.getRequestId())).getBody();

                    // Parse JSON response
                    JsonObject jsonResponse = JsonParser.parseString(responseBody).getAsJsonObject();
                    JsonObject data = jsonResponse.getAsJsonObject("data");
                    JsonObject userPostObj = data.getAsJsonObject("user_post_obj");

                    // Extract specific fields
                    String description = userPostObj.get("description").getAsString();
                    String imagePath = userPostObj.get("image_path").getAsString();

                    // Print or use the extracted values
                    System.out.println("Description: " + description);
                    System.out.println("Image Path: " + imagePath);

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
        
        
        devTools.addListener(Network.responseReceived(), response -> {
            Response res = response.getResponse();

            // Capture only the response of a specific API endpoint
            if (res.getUrl().contains("publishPost")) {
                System.out.println("API URL: " + res.getUrl());
                System.out.println("Status: " + res.getStatus());  
                
                System.out.println("Printed the status code before the Try catch");

                try {
                    // Get the response body
                	Thread.sleep(10000);  // Add a delay before fetching the response body
                    String responseBody = devTools.send(Network.getResponseBody(response.getRequestId())).getBody();
                    System.out.println(responseBody);

                    // Parse JSON response
                    JsonObject jsonResponse = JsonParser.parseString(responseBody).getAsJsonObject();
                    
                    // Check if the status object exists
                    if (jsonResponse.has("status") && !jsonResponse.get("status").isJsonNull()) {
                        JsonObject statusObject = jsonResponse.getAsJsonObject("status");

                        // Iterate through the status object
                        for (String key : statusObject.keySet()) {
                            JsonObject statusEntry = statusObject.getAsJsonObject(key);

                            // Extract specific fields
                            int uppId = statusEntry.get("upp_id").getAsInt();
                            boolean status = statusEntry.get("status").getAsBoolean();

                            // Print the values
                            System.out.println("UPP ID: " + uppId);
                            System.out.println("Status: " + status);
                            System.out.println("Printed the status code");
                        }
                    } else {
                        System.out.println("No 'status' object found in the response.");
                    }

                } catch (Exception e) {
                	 String responseBody = devTools.send(Network.getResponseBody(response.getRequestId())).getBody();
                     System.out.println(responseBody);

                     // Parse JSON response
                     JsonObject jsonResponse = JsonParser.parseString(responseBody).getAsJsonObject();
                     
                     // Check if the status object exists
                     if (jsonResponse.has("status") && !jsonResponse.get("status").isJsonNull()) {
                         JsonObject statusObject = jsonResponse.getAsJsonObject("status");

                         // Iterate through the status object
                         for (String key : statusObject.keySet()) {
                             JsonObject statusEntry = statusObject.getAsJsonObject(key);

                             // Extract specific fields
                             int uppId = statusEntry.get("upp_id").getAsInt();
                             boolean status = statusEntry.get("status").getAsBoolean();

                             // Print the values
                             System.out.println("UPP ID: " + uppId);
                             System.out.println("Status: " + status);
                         }
                     }
                     else {
                         System.out.println("No 'status' object found in the response.");
                     }
   
                }
            }
        });


        // Navigate to Practina demo
        driver.get("https://www.practina.com/demo");

        // Login process
        WebElement emailInput = driver.findElement(By.xpath("//input[@formcontrolname='email']"));
        emailInput.sendKeys("kunal.kumar+dummyaicontent32x@bridgingtech.com");

        WebElement passInput = driver.findElement(By.xpath("//input[@id='mat-input-0']"));
        passInput.sendKeys("K419unalkumar@");

        WebElement loginButton = driver.findElement(By.xpath("//span[@id='primaryButton']"));
        loginButton.click();

        Thread.sleep(4000);
        // Wait for AI Post element to be clickable
        WebElement aiPost = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@id='main']/ul/li[3]")));
        aiPost.click();

        // Wait for the post element to be clickable
        Thread.sleep(4000);
        WebElement element = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("(//div[@id='/posts']/div/ul/li/a[1])")));
        element.click();

        // Wait for Create Post button to be clickable
        WebElement createPost = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[contains(@class, 'create-post')]//button[contains(text(), 'Create Post')]")));
        createPost.click();

        // Input text in the textarea
        WebElement lexiInputField = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//textarea[@placeholder='Start creating: Enter a thought to craft your post']")));
        lexiInputField.sendKeys("Generate the post for tooth cleaning");

        // Click the generate button
        WebElement generateButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='generate-btn w-100 text-center mt-4']/button")));
        generateButton.click();
        
        WebElement continueToPublishButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='preview-card mx-auto']/div[2]/button")));
        continueToPublishButton.click();
        
        WebElement publishButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='wrapper-end px-lg-4 pb-lg-0 pb-4']/button")));
        publishButton.click();
        
        Thread.sleep(5000);
        
        try {
            // Try to find and interact with the warning dialog
            WebElement dialogueContainer = driver.findElement(By.xpath("//div[@class='dialog-container p-1']"));
          
            WebElement ratingButton = dialogueContainer.findElement(By.xpath("//div[@class='rating text-center']/img[5]"));
            ratingButton.click();
            
            WebElement easyToUnderstandReason = driver.findElement(By.xpath("(//mat-button-toggle-group[@name='ingredients']/mat-button-toggle/button)[1]"));
            easyToUnderstandReason.click();
            
            WebElement submitButton = driver.findElement(By.xpath("//button[@class='btn btn-primary submitBtn']"));
            submitButton.click();
            
 
            
        }  catch (NoSuchElementException f) {
        	System.out.println("I'm inside catch condition");
        WebElement dialogueContainer = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='dialog-container p-1']")));
        
        WebElement ratingButton = dialogueContainer.findElement(By.xpath("//div[@class='rating text-center']/img[5]"));
        ratingButton.click();
        
        WebElement easyToUnderstandReason = driver.findElement(By.xpath("(//mat-button-toggle-group[@name='ingredients']/mat-button-toggle/button)[1]"));
        easyToUnderstandReason.click();
        
        WebElement submitButton = driver.findElement(By.xpath("//button[@class='btn btn-primary submitBtn']"));
        submitButton.click();
        
    
        // Keep the browser open long enough to capture the API response
        Thread.sleep(5000); // You may replace this with a better wait logic if needed

        // Quit the browser
       
    }
    }
}
