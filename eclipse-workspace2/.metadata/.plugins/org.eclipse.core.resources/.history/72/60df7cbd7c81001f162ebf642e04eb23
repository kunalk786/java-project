package Test_Scenarios;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.time.Duration;
import java.util.Random;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.WebDriverWait;

public class SignUpWithPhone {

    // Original phone numbers
    static String[] phoneNumbers = {
        "6362105081", // First number
        "2085689244", // Second number
        "3156391275", // Third number
        "3152593478"  // Fourth number
    };

    static Random random = new Random();
    static WebDriverWait wait;

    public static void main(String[] args) throws InterruptedException {
        // Set up WebDriver
        WebDriver driver = new ChromeDriver();
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));

        // Maximize browser window
        driver.manage().window().maximize();

        // Navigate to the sign-up page
        driver.get("https://www.practina.com/demo");
        System.out.println(org.openqa.selenium.WebDriver.class.getPackage().getImplementationVersion());

        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(20));
        
        WebElement loginPhoneNumberButton = driver.findElement(By.xpath("(//p[@class='fs-16 fw-500 text-purple mb-0'])[2]"));
        loginPhoneNumberButton.click();
        
        

        // Attempt signup with a modified phone number and generated email
        String selectedPhoneNumber = modifyNumber(phoneNumbers[random.nextInt(phoneNumbers.length)]);
        String generatedEmail = generateUniqueEmail();

        // Retrieve OTP from the database
        String otp = getOTPFromDB(selectedPhoneNumber);

        // Use the retrieved OTP to sign up
        if (trySignupWithPhoneNumber(driver, selectedPhoneNumber, generatedEmail, otp)) {
            System.out.println("Signup successful with phone number: " + selectedPhoneNumber + " and email: " + generatedEmail);
        } else {
            System.out.println("Signup failed or phone number already exists.");
        }

        // Close the browser
        driver.quit();
    }

    // Database logic to get OTP
    public static String getOTPFromDB(String contactNumber) {
        String otp = null;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            // Adjust the connection URL, username, and password as needed
            try (Connection connection = DriverManager.getConnection(
                    "jdbc:mysql://practina-live.czs1is1e6ezt.us-west-2.rds.amazonaws.com:1501/practina",
                    "Kun@l-KumaR", "0mlTnBs3JWQKXdkt")) {

                // Query to fetch OTP for the specified contact number
                String sql = "SELECT otp FROM otp_report WHERE contact_no = {modified_number}";
                PreparedStatement ps = connection.prepareStatement(sql);
                ps.setString(1, contactNumber);

                ResultSet rs = ps.executeQuery();
                if (rs.next()) {
                    otp = rs.getString("otp");
                }

                // Clean up resources
                rs.close();
                ps.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return otp;
    }

    private static String generateUniqueEmail() {
        String prefix = "kunal.kumar+dummybot";
        String suffix = "@bridgingtech.com";
        long timestamp = System.currentTimeMillis();
        return prefix + timestamp + suffix;
    }

    // Modify one character of the phone number on each run
    private static String modifyNumber(String originalNumber) {
        String areaCode = originalNumber.substring(0, 3);
        int midSection = random.nextInt(900) + 100;
        int lastSection = random.nextInt(9000) + 1000;

        return String.format("%s%03d%04d", areaCode, midSection, lastSection);
    }

    // Attempt signup with the modified phone number and generated email
    private static boolean trySignupWithPhoneNumber(WebDriver driver, String phoneNumber, String email, String otp) {
        try {
            WebElement phoneNumberField = driver.findElement(By.xpath("//input[@formcontrolname='contact']"));
            ((JavascriptExecutor) driver).executeScript("arguments[0].value = '';", phoneNumberField);
            phoneNumberField.clear();
            phoneNumberField.sendKeys(phoneNumber);

            WebElement submitButton = driver.findElement(By.id("primaryButton"));
            submitButton.click();

            // Wait for a moment to process
            driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(5));

            // Enter the OTP after signup (assuming you have an OTP field)
            if (otp != null) {
                WebElement otpField = driver.findElement(By.xpath("//input[@formcontrolname='otp']")); // Adjust XPath as needed
                otpField.sendKeys(otp);
            }

            // Check for error message
            boolean isErrorPresent = driver.findElements(By.xpath("//div[@id='toast-container']/div/div[contains(text(), 'Contact number already exists')]")).size() > 0;
            return !isErrorPresent;

        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }
}
