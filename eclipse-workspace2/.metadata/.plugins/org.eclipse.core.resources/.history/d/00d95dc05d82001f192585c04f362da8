package Test_Scenarios;

import java.time.Duration;
import java.util.Optional;
import java.util.concurrent.CountDownLatch;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.devtools.DevTools;
import org.openqa.selenium.devtools.v114.network.Network; 
import org.openqa.selenium.devtools.v114.network.model.Response;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;

public class CreatePost {
    static WebDriverWait wait;
    private static CountDownLatch latch = new CountDownLatch(1);
    private static boolean isPostPublished = false;

    public static void main(String[] args) {
        // Initialize ChromeDriver
        ChromeDriver driver = new ChromeDriver();
        driver.manage().window().maximize();
        
        // Create WebDriverWait with explicit waits
        wait = new WebDriverWait(driver, Duration.ofSeconds(20));
        
        // Create DevTools session for capturing API response
        DevTools devTools = driver.getDevTools();
        devTools.createSession();
        devTools.send(Network.enable(Optional.empty(), Optional.empty(), Optional.empty()));
        
        addResponseListeners(devTools);

        try {
            // Navigate to Practina demo
            driver.get("https://www.practina.com/demo");
            login(driver);
            createAndPublishPost(driver);
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            driver.quit(); // Ensure the driver quits after execution
        }
    }

    private static void login(ChromeDriver driver) throws InterruptedException {
        WebElement emailInput = driver.findElement(By.xpath("//input[@formcontrolname='email']"));
        emailInput.sendKeys("kunal.kumar+dummybot1727953241144@bridgingtech.com");

        WebElement passInput = driver.findElement(By.xpath("//input[@id='mat-input-0']"));
        passInput.sendKeys("K419unalkumar@");

        WebElement loginButton = driver.findElement(By.xpath("//span[@id='primaryButton']"));
        loginButton.click();

        Thread.sleep(4000); // Wait for login to complete
    }

    private static void createAndPublishPost(ChromeDriver driver) throws InterruptedException {
        // Wait for AI Post element to be clickable
        WebElement aiPost = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@id='main']/ul/li[3]")));
        aiPost.click();

        // Wait for the post element to be clickable
        Thread.sleep(4000);
        WebElement element = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("(//div[@id='/posts']/div/ul/li/a[1])")));
        element.click();

        // Wait for Create Post button to be clickable
        WebElement createPost = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[contains(@class, 'create-post')]//button[contains(text(), 'Create Post')]")));
        createPost.click();

        WebElement lexiInputField = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//textarea[@placeholder='Start creating: Enter a thought to craft your post']")));
        lexiInputField.sendKeys("Generate the post for tooth cleaning");

        // Click the generate button
        WebElement generateButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='generate-btn w-100 text-center mt-4']/button")));
        generateButton.click();
        
        WebElement continueToPublishButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='preview-card mx-auto']/div[2]/button")));
        continueToPublishButton.click();
        
        WebElement publishButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='wrapper-end px-lg-4 pb-lg-0 pb-4']/button")));
        publishButton.click();
    }

    private static void addResponseListeners(DevTools devTools) {
        devTools.addListener(Network.responseReceived(), response -> {
            Response res = response.getResponse();

            if (res.getUrl().contains("generateContentAi") || res.getUrl().contains("publishPost")) {
                System.out.println("API URL: " + res.getUrl());
                System.out.println("Status: " + res.getStatus());

                try {
                    String responseBody = devTools.send(Network.getResponseBody(response.getRequestId())).getBody();
                    handleApiResponse(res.getUrl(), responseBody);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    private static void handleApiResponse(String url, String responseBody) {
        JsonObject jsonResponse = JsonParser.parseString(responseBody).getAsJsonObject();

        if (url.contains("generateContentAi")) {
            // Handle response for generateContentAi
            JsonObject data = jsonResponse.getAsJsonObject("data");
            JsonObject userPostObj = data.getAsJsonObject("user_post_obj");
            String description = userPostObj.get("description").getAsString();
            String imagePath = userPostObj.get("image_path").getAsString();
            System.out.println("Description: " + description);
            System.out.println("Image Path: " + imagePath);
        } else if (url.contains("publishPost")) {
            // Handle response for publishPost
            if (jsonResponse.has("status") && !jsonResponse.get("status").isJsonNull()) {
                JsonObject statusObject = jsonResponse.getAsJsonObject("status");
                for (String key : statusObject.keySet()) {
                    JsonObject statusEntry = statusObject.getAsJsonObject(key);
                    int uppId = statusEntry.get("upp_id").getAsInt();
                    boolean status = statusEntry.get("status").getAsBoolean();
                    System.out.println("UPP ID: " + uppId);
                    System.out.println("Status: " + status);
                }
            } else {
                System.out.println("No 'status' object found in the response.");
            }
        }
    }
}
